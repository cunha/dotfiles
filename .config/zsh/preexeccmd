# shellcheck shell=bash

function precmd {
	if [[ $? -ne 0 ]] ; then
		PROMPT_TERM_COLOR="%F{red}"
	else
		PROMPT_TERM_COLOR="%F{green}"
	fi
	vcs_info
	set-prompt
	if [[ -z "$WINDOW" ]] ; then
		settitle $(hostname -s):$(pwd)
	else
		tmux rename-window $(basename $(pwd))
	fi
}

function preexec {
	update_user_env
	cmd=${2[(w)1]}
	cmd=${cmd#./}
	if [[ $cmd = ssh ]] ; then cmd="s ${2[(w)2]}" ; fi
	if [[ $cmd = vim ]] ; then cmd="v $(basename -- ${2[(w)$#2]})" ; fi
	if [[ -z "$WINDOW" ]] ; then
		settitle "$(hostname -s):$(pwd) -- $cmd"
	else
		tmux rename-window $cmd
	fi
}

function update_user_env {
	update_ssh_auth_sock
	if [[ -n $TMUX ]] ; then
		NEW_IPC_HOOK=$(tmux show-environment VSCODE_IPC_HOOK_CLI)
		if [[ "$NEW_IPC_HOOK" == "-VSCODE_IPC_HOOK_CLI" ]] ; then
			unset VSCODE_IPC_HOOK_CLI
			unset VSCODE_GIT_ASKPASS_NODE
			unset VSCODE_GIT_ASKPASS_MAIN
			unset VSCODE_GIT_IPC_HANDLE
			return
		fi
		NEW_IPC_HOOK=${NEW_IPC_HOOK##*=}
		if [[ -n $VSCODE_IPC_HOOK_CLI ]] ; then
			[[ $NEW_IPC_HOOK == "$VSCODE_IPC_HOOK_CLI" ]] && return
			if [[ ! -S $NEW_IPC_HOOK ]] ; then
				echo "${fg[red]}$NEW_IPC_HOOK is not a valid socket.${terminfo[sgr0]}"
				return
			fi
		fi
		VSCODE_IPC_HOOK_CLI=$NEW_IPC_HOOK
		eval $(tmux show-environment VSCODE_GIT_ASKPASS_NODE)
		eval $(tmux show-environment VSCODE_GIT_ASKPASS_MAIN)
		eval $(tmux show-environment VSCODE_GIT_IPC_HANDLE)
		echo "${fg[yellow]}VS Code env updated.${terminfo[sgr0]}"
	fi
}
