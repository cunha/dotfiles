---
- name: Install packages
  become: true
  apt:
    name: "{{ apt_packages }}"
    state: latest
    cache_valid_time: 600

- name: Install Python packages
  become: true
  pip:
    name: "{{ pip_packages }}"
    state: latest
    executable: pip3

- name: Stat pdyndns.py executable
  stat:
    path: "{{ pdyndns_executable }}"
  register: pddstat

- name: Check pdyndns.py is executable
  fail:
    msg: "{{ pdyndns_executable }} missing or not executable"
  when: not pddstat.stat.executable

- name: Configure PowerDNS
  become: true
  template:
    src: pdns.conf.j2
    dest: "{{ powerdns_config_file }}"
    mode: 0600

- name: Configure dynamic DNS backend
  become: true
  template:
    src: pdyndns.conf.j2
    dest: "{{ pdyndns_config_file }}"
    mode: 0644

- name: Create dynamic DNS backend target file directory
  become: true
  file: path={{ pdyndns_targets_dir }} state=directory

- name: Create dynamic DNS backend PEERING target files
  become: true
  copy:
    src: peering-targets.txt
    dest: "{{ pdyndns_targets_dir }}/targets{{ item }}.txt"
  with_sequence: count={{ peering_num_targets }}

- name: Copy full list of AMS-IX targets
  become: true
  copy:
    src: amsix-full-targets.txt
    dest: "{{ pdyndns_targets_dir }}/amsix-full-targets.txt"

- name: Create dynamic DNS backend AMS-IX target files
  become: true
  shell: for i in $(seq {{ amsix_num_targets }}) ; do shuf -n {{ amsix_num_ips }} -o amsix$i.txt amsix-full-targets.txt ; done
  args:
    chdir: "{{ pdyndns_targets_dir }}"

- name: Enable and restart PowerDNS
  become: true
  service:
    name: pdns
    enabled: yes
    state: restarted
