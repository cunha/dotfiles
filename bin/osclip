#!/bin/sh
# Copyright (c) 2012 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.
# Obtained from https://github.com/yetamrra/termcopy/
# Adjusted by Italo Cunha to fix copying under tmux.

# Max length of the OSC 52 sequence.  Sequences longer than this will not be
# sent to the terminal.
OSC_52_MAX_SEQUENCE="100000"

# Write an error message and exit.
# Usage: <message>
die() {
  echo "ERROR: $*"
  exit 1
}

# Print an exact string with no extra newline.
emit() {
  printf "%s" "$*"
}

# Base64 encode stdin.
b64enc() {
  base64 | tr -d '\n'
}

# Check if a command exists
find_cmd() {
  command -v "$1" >/dev/null 2>&1
}

# Send the OSC 52 sequence to copy the content.
# Usage: [string]
copy() {
  local str
  local seq

  if [ $# -eq 0 ]; then
    str="$(cat -; printf a)"
    str="${str%a}"
  else
    str="$*"
  fi
  seq="$(emit "${str}" | b64enc)"

  local len=${#seq}
  if [ "${len}" -lt "${OSC_52_MAX_SEQUENCE}" ]; then
    # By default, kitty terminal concatenates successive pastes, so clear
    # the clipboard first.  This shouldn't do any harm on other terminals.
    # https://sw.kovidgoyal.net/kitty/protocol-extensions.html#pasting-to-clipboard
    # print_seq "$(printf '\033]52;c;!\a')"

    emit "$(printf '\033]52;c;%s\a' "${seq}")"
  else
    die "selection too long to send to terminal:" \
      "${OSC_52_MAX_SEQUENCE} limit, ${len} attempted"
  fi
}

# Write tool usage and exit.
# Usage: [error message]
usage() {
  if [ $# -gt 0 ]; then
    exec 1>&2
  fi
  cat <<EOF
Usage: $0 [options] [string]

Send an arbitrary string to the terminal clipboard using the OSC 52 escape
sequence as specified in xterm:
  https://invisible-island.net/xterm/ctlseqs/ctlseqs.html
  Section "Operating System Controls", Ps => 52.

The data can either be read from stdin:
  $ echo "hello world" | $0

Or specified on the command line:
  $ $0 "hello world"
EOF

  if [ $# -gt 0 ]; then
    echo
    die "$@"
  else
    exit 0
  fi
}

main() {
  set -e

  while [ $# -gt 0 ]; do
    case $1 in
    -h|--help)
      usage
      ;;
    -*)
      usage "Unknown option: $1"
      ;;
    *)
      break
      ;;
    esac
  done

  copy "$@"
}
main "$@"

