#!/usr/bin/python3

import sys

HEIGHT_STEP = 0.00001

def parse(line):
    if not line:
        return None, None
    fields = line.split()
    weight = 1
    if len(fields) > 1:
        weight = float(fields[1])
    return [float(fields[0]), weight]

def buildcdf(fd):
    result = list()

    last, cnt = parse(fd.readline())

    val, weight = parse(fd.readline())
    while val is not None:
        if val != last:
            assert not result or last > result[-1][0], 'input not sorted'
            result.append((last, cnt))
            cnt += weight
        else:
            cnt += weight
        last = val
        val, weight = parse(fd.readline())

    if not result:
        result.append([0.0, 0.0])
    result.append([last, cnt])

    cdf = list()

    h = HEIGHT_STEP
    i = 0
    while i < len(result):
        x, y = result[i][0], float(result[i][1])/cnt
        while y < h:
            i += 1
            x, y = result[i][0], float(result[i][1])/cnt
        cdf.append((x, y))
        while y >= h:
            h += HEIGHT_STEP
        i += 1
    cdf.append((result[-1][0], 1.0))
    return cdf


if __name__ == '__main__':
    dcdf = buildcdf(sys.stdin)
    for dx, dy in dcdf:
        sys.stdout.write('%f %f\n' % (dx, dy))
    sys.exit(0)
